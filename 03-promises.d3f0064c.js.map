{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAGjCH,EAAKC,KAAKM,iBAAiB,UAW3B,SAAkBC,GAChBA,EAAMC,iBAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIC,EAAQD,IAAK,CAC/B,IAAME,EAAWF,EAAI,EACfG,EAAQC,OAAOC,GAAcC,EAAON,EAE1CO,EAAcL,EAAUC,GACrBK,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUhB,EAAKe,EAALf,MACjBiB,EAAAvB,GAASwB,OAAOC,QACd,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANpB,EAAM,M,IAGjDqB,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUhB,EAAKe,EAALf,MAClBiB,EAAAvB,GAASwB,OAAOI,QACd,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANpB,EAAM,M,QAxBrDJ,EAAKI,MAAMuB,MAAQ,IACnB,IAAMZ,EAAaf,EAAKI,MAAMuB,MAE9B3B,EAAKK,KAAKsB,MAAQ,KAClB,IAAMX,EAAOhB,EAAKK,KAAKsB,MAEvB3B,EAAKM,OAAOqB,MAAQ,EACpB,IAAMhB,EAASX,EAAKM,OAAOqB,MAuB3B,SAASV,EAAcG,EAAUhB,GAC/B,IAAMwB,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEZ,WAAUhB,UAEpB6B,EAAO,CAAEb,WAAUhB,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nrefs.delay.value = 1000;\nconst firstDelay = refs.delay.value;\n\nrefs.step.value = 1500;\nconst step = refs.step.value;\n\nrefs.amount.value = 3;\nconst amount = refs.amount.value;\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = Number(firstDelay) + step * i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","addEventListener","event","preventDefault","i","$ce04d3a99e08e73b$var$amount","position1","delay1","Number","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$createPromise","then","param","position","$parcel$interopDefault","Notify","success","concat","catch","failure","value","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.d3f0064c.js.map"}